syntax = "proto3";

// P2P Onion Tunnel frame
message TunnelFrame {

  // an identifier for identifying the corresponding tunnel of this frame
  fixed64 frameId = 1;

  // random, unpredictable iv used for encryption
  bytes iv = 2;

  // HandshakeData | enc(ApplicationData) | enc(HandshakeData)
  oneof message {
    bytes data = 3;
    Close close = 4;
  }
}

message HandshakeData {
  oneof message {
    PlainHandshakeData handshakeData = 1;
    EncryptedHandshakeData encHandshakeData = 2;
  }
}

message PlainHandshakeData {
  // establish secure channel
  oneof message {
    ClientHello clientHello = 1;
    ServerHello serverHello = 2;
  }

  // unencrypted padding
  bytes padding = 3;
}

message ClientHello {
  // frameId used for communicating with the source
  uint64 backwardFrameId = 1;
}

message ServerHello {
  // used for hops to tell next hop how to address prev hop
  uint64 backwardFrameId = 1;
  // used for telling the source how to address the peer
  uint64 forwardFrameId = 2;
}

message EncryptedHandshakeData {
  // this can be parsed into DecryptedHandshakeData afterwards
  bytes data = 2;
}

message DecryptedHandshakeData {

  // exchange routing information
  RoutingInformation routing = 1;

  bytes padding = 2;
}

message RoutingInformation {
  bytes nextHopAddr = 1;
  uint32 nextHopPort = 2;
}

message ApplicationData {

  bytes data = 1;
  bytes padding = 2;
}

message Close {
  bytes padding = 1;
}
