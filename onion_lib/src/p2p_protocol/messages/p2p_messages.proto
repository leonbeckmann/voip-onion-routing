syntax = "proto3";

// P2P Onion Tunnel frame
message TunnelFrame {

  // an identifier for identifying the corresponding tunnel of this frame
  fixed64 frameId = 1;

  // random, unpredictable iv used for encryption
  bytes iv = 2;

  oneof message {
    // [padding_size: u16, data_type: u8, data, padding] encrypted
    bytes data = 3;
    Close close = 4;
  }
}

message HandshakeData {
  // establish secure channel
  oneof message {
    ClientHello clientHello = 1;
    ServerHello serverHello = 2;
    RoutingInformation routing = 3;
  }
}

message ClientHello {
  // frameId used for communicating with the source
  uint64 backwardFrameId = 1;
}

message ServerHello {
  // used for hops to tell next hop how to address prev hop
  uint64 backwardFrameId = 1;
  // used for telling the source how to address the peer
  uint64 forwardFrameId = 2;
}

message RoutingInformation {
  bool isEndpoint = 1;
  bytes nextHopAddr = 2;
  uint32 nextHopPort = 3;
}

message ApplicationData {
  bytes data = 1;
}

message Close {}
