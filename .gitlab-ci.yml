stages:
  - build

.rust-latest: &rust_latest
  stage: build
  image: rust:latest
  script:
    - cargo build --all-features --verbose
    - cargo test --all-features --verbose

.rust-nightly: &rust_nightly
  stage: build
  image: rustlang/rust:nightly
  script:
    - cargo build --all-features --verbose
    - cargo test --all-features --verbose
  allow_failure: true

rust-code-style:
  stage: build
  image: rust:latest
  tags:
    - docker
  before_script:
    - rustup component add rustfmt
    - rustup component add clippy
  script:
    - cargo fmt --all -- --check
    - cargo clippy --all-targets --all-features -- -D warnings
  allow_failure: true

rust-coverage:
  stage: build
  image: rust:latest
  tags:
    - docker
  before_script:
    - cargo install cargo-tarpaulin
  script:
    - cargo tarpaulin --all-features --out=Xml --out=Html --output-dir=coverage
  after_script:
    - mv coverage/tarpaulin-report.html coverage/index.html
    - mkdir -p public
    - mv coverage/ public/coverage/
  artifacts:
    paths:
      - public/
    reports:
      cobertura: public/coverage/cobertura.xml
  coverage: '/(\d+\.\d+)% coverage/'

rust-latest-linux:
  <<: *rust_latest
  tags:
    - docker
    - linux

rust-latest-darwin:
  <<: *rust_latest
  tags:
    - docker
    - darwin

rust-nightly-linux:
  <<: *rust_nightly
  tags:
    - docker
    - linux

rust-nightly-darwin:
  <<: *rust_nightly
  tags:
    - docker
    - darwin
